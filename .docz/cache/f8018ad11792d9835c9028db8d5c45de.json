{"remainingRequest":"/Users/lth/LTH_2018/recalendar/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/lth/LTH_2018/recalendar/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"/Users/lth/LTH_2018/recalendar/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/lth/LTH_2018/recalendar/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/lth/LTH_2018/recalendar/src/components/Common/YearHeader.js","dependencies":[{"path":"/Users/lth/LTH_2018/recalendar/src/components/Common/YearHeader.js","mtime":1544806407570},{"path":"/Users/lth/LTH_2018/recalendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lth/LTH_2018/recalendar/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/lth/LTH_2018/recalendar/src/components/Common/YearHeader.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createRef } from 'react';\nimport { css } from 'glamor';\nimport { Overlay, SelectBox } from '.';\nvar baseYearBox = css({\n  textAlign: 'center',\n  fontSize: '1em',\n  fontWeight: 600\n});\nvar baseYearText = css({\n  cursor: 'pointer',\n  padding: 5\n});\n\nvar YearHeader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(YearHeader, _React$PureComponent);\n\n  function YearHeader() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, YearHeader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(YearHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"overlay\", createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"currentYear\", createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      isChanging: false,\n      years: []\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"fillNumber\", function (min, max) {\n      var arr = [];\n\n      for (var i = min; i <= max; i += 1) {\n        arr.push(i);\n      }\n\n      return arr;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setChangeMode\", function () {\n      var year = _this.props.year;\n      var years = _this.state.years;\n\n      if (years.length <= 0) {\n        years = _this.fillNumber(year - 100, year + 100);\n      }\n\n      _this.setState({\n        isChanging: true,\n        years: years\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closeChangeMode\", function () {\n      _this.setState({\n        isChanging: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"changeYear\", function (year) {\n      return function () {\n        var changeYear = _this.props.changeYear;\n        changeYear(year);\n\n        _this.closeChangeMode();\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(YearHeader, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var isChanging = this.state.isChanging;\n\n      if (isChanging && prevState.isChanging !== isChanging) {\n        if (this.overlay.current && this.currentYear.current) {\n          this.overlay.current.scrollTop = this.currentYear.current.offsetTop - 100;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isChanging = _this$state.isChanging,\n          years = _this$state.years;\n      var _this$props = this.props,\n          year = _this$props.year,\n          styles = _this$props.styles;\n      var yearBox = styles.yearBox,\n          yearText = styles.yearText;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", Object.assign({}, css(baseYearBox, yearBox), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"span\", Object.assign({\n        role: \"button\",\n        tabIndex: \"0\"\n      }, css(baseYearText, yearText), {\n        onClick: this.setChangeMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), year)), isChanging && React.createElement(Overlay, {\n        handleClose: this.closeChangeMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: '100%',\n          overflowY: 'auto'\n        },\n        ref: this.overlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, years.map(function (item) {\n        var isSelected = item === year;\n        return React.createElement(SelectBox, {\n          key: item,\n          selected: isSelected,\n          onClick: _this2.changeYear(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          ref: isSelected ? _this2.currentYear : null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, item));\n      }))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return YearHeader;\n}(React.PureComponent);\n\nvar _default = YearHeader;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(baseYearBox, \"baseYearBox\", \"/Users/lth/LTH_2018/recalendar/src/components/Common/YearHeader.js\");\n  reactHotLoader.register(baseYearText, \"baseYearText\", \"/Users/lth/LTH_2018/recalendar/src/components/Common/YearHeader.js\");\n  reactHotLoader.register(YearHeader, \"YearHeader\", \"/Users/lth/LTH_2018/recalendar/src/components/Common/YearHeader.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/lth/LTH_2018/recalendar/src/components/Common/YearHeader.js\");\n  leaveModule(module);\n})();\n\n;\nYearHeader.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"fillNumber\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"min\",\n      \"type\": null\n    }, {\n      \"name\": \"max\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setChangeMode\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"closeChangeMode\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"changeYear\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"year\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"YearHeader\"\n};",{"version":3,"sources":["/Users/lth/LTH_2018/recalendar/src/components/Common/YearHeader.js"],"names":["React","createRef","css","Overlay","SelectBox","baseYearBox","textAlign","fontSize","fontWeight","baseYearText","cursor","padding","YearHeader","isChanging","years","min","max","arr","i","push","year","props","state","length","fillNumber","setState","changeYear","closeChangeMode","prevProps","prevState","overlay","current","currentYear","scrollTop","offsetTop","styles","yearBox","yearText","setChangeMode","height","overflowY","map","item","isSelected","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,GAAnC;AAEA,IAAMC,WAAW,GAAGH,GAAG,CAAC;AACtBI,EAAAA,SAAS,EAAE,QADW;AAEtBC,EAAAA,QAAQ,EAAE,KAFY;AAGtBC,EAAAA,UAAU,EAAE;AAHU,CAAD,CAAvB;AAKA,IAAMC,YAAY,GAAGP,GAAG,CAAC;AACvBQ,EAAAA,MAAM,EAAE,SADe;AAEvBC,EAAAA,OAAO,EAAE;AAFc,CAAD,CAAxB;;IAKMC,U;;;;;;;;;;;;;;;;;;sFACMX,SAAS,E;;0FAELA,SAAS,E;;oFAEf;AACNY,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,KAAK,EAAE;AAFD,K;;yFAcK,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzB,UAAMC,GAAG,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAGH,GAAb,EAAkBG,CAAC,IAAIF,GAAvB,EAA4BE,CAAC,IAAI,CAAjC,EAAoC;AAClCD,QAAAA,GAAG,CAACE,IAAJ,CAASD,CAAT;AACD;;AACD,aAAOD,GAAP;AACD,K;;4FAEe,YAAM;AAAA,UACZG,IADY,GACH,MAAKC,KADF,CACZD,IADY;AAAA,UAEdN,KAFc,GAEJ,MAAKQ,KAFD,CAEdR,KAFc;;AAGpB,UAAIA,KAAK,CAACS,MAAN,IAAgB,CAApB,EAAuB;AACrBT,QAAAA,KAAK,GAAG,MAAKU,UAAL,CAAgBJ,IAAI,GAAG,GAAvB,EAA4BA,IAAI,GAAG,GAAnC,CAAR;AACD;;AACD,YAAKK,QAAL,CAAc;AACZZ,QAAAA,UAAU,EAAE,IADA;AAEZC,QAAAA,KAAK,EAALA;AAFY,OAAd;AAID,K;;8FAEiB,YAAM;AACtB,YAAKW,QAAL,CAAc;AACZZ,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,K;;yFAEY,UAAAO,IAAI;AAAA,aAAI,YAAM;AAAA,YACjBM,UADiB,GACF,MAAKL,KADH,CACjBK,UADiB;AAEzBA,QAAAA,UAAU,CAACN,IAAD,CAAV;;AACA,cAAKO,eAAL;AACD,OAJgB;AAAA,K;;;;;;;uCAnCEC,S,EAAWC,S,EAAW;AAAA,UAC/BhB,UAD+B,GAChB,KAAKS,KADW,CAC/BT,UAD+B;;AAEvC,UAAIA,UAAU,IAAIgB,SAAS,CAAChB,UAAV,KAAyBA,UAA3C,EAAuD;AACrD,YAAI,KAAKiB,OAAL,CAAaC,OAAb,IAAwB,KAAKC,WAAL,CAAiBD,OAA7C,EAAsD;AACpD,eAAKD,OAAL,CAAaC,OAAb,CAAqBE,SAArB,GAAiC,KAAKD,WAAL,CAAiBD,OAAjB,CAAyBG,SAAzB,GAAqC,GAAtE;AACD;AACF;AACF;;;6BAkCQ;AAAA;;AAAA,wBACuB,KAAKZ,KAD5B;AAAA,UACCT,UADD,eACCA,UADD;AAAA,UACaC,KADb,eACaA,KADb;AAAA,wBAEkB,KAAKO,KAFvB;AAAA,UAECD,IAFD,eAECA,IAFD;AAAA,UAEOe,MAFP,eAEOA,MAFP;AAAA,UAGCC,OAHD,GAGuBD,MAHvB,CAGCC,OAHD;AAAA,UAGUC,QAHV,GAGuBF,MAHvB,CAGUE,QAHV;AAIP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6CAASnC,GAAG,CAACG,WAAD,EAAc+B,OAAd,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,QAAQ,EAAC;AAFX,SAGMlC,GAAG,CAACO,YAAD,EAAe4B,QAAf,CAHT;AAIE,QAAA,OAAO,EAAE,KAAKC,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMGlB,IANH,CADF,CADF,EAWGP,UAAU,IACT,oBAAC,OAAD;AAAS,QAAA,WAAW,EAAE,KAAKc,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AAAEY,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SADT;AAEE,QAAA,GAAG,EAAE,KAAKV,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGhB,KAAK,CAAC2B,GAAN,CAAU,UAACC,IAAD,EAAU;AACnB,YAAMC,UAAU,GAAGD,IAAI,KAAKtB,IAA5B;AACA,eACE,oBAAC,SAAD;AACE,UAAA,GAAG,EAAEsB,IADP;AAEE,UAAA,QAAQ,EAAEC,UAFZ;AAGE,UAAA,OAAO,EAAE,MAAI,CAACjB,UAAL,CAAgBgB,IAAhB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE;AAAM,UAAA,GAAG,EAAEC,UAAU,GAAG,MAAI,CAACX,WAAR,GAAsB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGU,IADH,CALF,CADF;AAWD,OAbA,CAJH,CADF,CAZJ,CADF;AAqCD;;;;;;;;;;;EA5FsB1C,KAAK,CAAC4C,a;;eA+FhBhC,U;AAAf;;;;;;;;;;;;0BAzGMP,W;0BAKAI,Y;0BAKAG,U","sourcesContent":["import React, { createRef } from 'react';\nimport { css } from 'glamor';\nimport { Overlay, SelectBox } from '.';\n\nconst baseYearBox = css({\n  textAlign: 'center',\n  fontSize: '1em',\n  fontWeight: 600,\n});\nconst baseYearText = css({\n  cursor: 'pointer',\n  padding: 5,\n});\n\nclass YearHeader extends React.PureComponent {\n  overlay = createRef();\n\n  currentYear = createRef();\n\n  state = {\n    isChanging: false,\n    years: [],\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isChanging } = this.state;\n    if (isChanging && prevState.isChanging !== isChanging) {\n      if (this.overlay.current && this.currentYear.current) {\n        this.overlay.current.scrollTop = this.currentYear.current.offsetTop - 100;\n      }\n    }\n  }\n\n  fillNumber = (min, max) => {\n    const arr = [];\n    for (let i = min; i <= max; i += 1) {\n      arr.push(i);\n    }\n    return arr;\n  };\n\n  setChangeMode = () => {\n    const { year } = this.props;\n    let { years } = this.state;\n    if (years.length <= 0) {\n      years = this.fillNumber(year - 100, year + 100);\n    }\n    this.setState({\n      isChanging: true,\n      years,\n    });\n  };\n\n  closeChangeMode = () => {\n    this.setState({\n      isChanging: false,\n    });\n  };\n\n  changeYear = year => () => {\n    const { changeYear } = this.props;\n    changeYear(year);\n    this.closeChangeMode();\n  };\n\n  render() {\n    const { isChanging, years } = this.state;\n    const { year, styles } = this.props;\n    const { yearBox, yearText } = styles;\n    return (\n      <div>\n        <div {...css(baseYearBox, yearBox)}>\n          <span\n            role=\"button\"\n            tabIndex=\"0\"\n            {...css(baseYearText, yearText)}\n            onClick={this.setChangeMode}\n          >\n            {year}\n          </span>\n        </div>\n        {isChanging && (\n          <Overlay handleClose={this.closeChangeMode}>\n            <div\n              style={{ height: '100%', overflowY: 'auto' }}\n              ref={this.overlay}\n            >\n              {years.map((item) => {\n                const isSelected = item === year;\n                return (\n                  <SelectBox\n                    key={item}\n                    selected={isSelected}\n                    onClick={this.changeYear(item)}\n                  >\n                    <span ref={isSelected ? this.currentYear : null}>\n                      {item}\n                    </span>\n                  </SelectBox>\n                );\n              })}\n            </div>\n          </Overlay>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default YearHeader;\n"]}]}