{"remainingRequest":"/Users/lth/LTH_2018/recalendar/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/lth/LTH_2018/recalendar/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"/Users/lth/LTH_2018/recalendar/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/lth/LTH_2018/recalendar/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/lth/LTH_2018/recalendar/src/components/Common/Day.js","dependencies":[{"path":"/Users/lth/LTH_2018/recalendar/src/components/Common/Day.js","mtime":1545286741730},{"path":"/Users/lth/LTH_2018/recalendar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lth/LTH_2018/recalendar/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/lth/LTH_2018/recalendar/src/components/Common/Day.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport isSameDay from 'date-fns/is_same_day';\nimport format from 'date-fns/format';\nimport getMonth from 'date-fns/get_month';\nimport getDate from 'date-fns/get_date';\nimport { css } from 'glamor';\nimport { Event } from '.';\nvar baseDateBox = css({\n  fontSize: 14,\n  position: 'relative',\n  minWidth: '2.5em',\n  minHeight: '2.5em',\n  textAlign: 'center',\n  verticalAlign: 'top',\n  cursor: 'pointer',\n  opacity: 1,\n  transition: 'opacity 0.2s'\n});\n\nvar baseDateText = function baseDateText(isThisMonth) {\n  return css({\n    marginBottom: '0.3em',\n    cursor: 'pointer',\n    color: isThisMonth ? 'inherit' : '#ccc',\n    backgroundColor: 'transparent',\n    outline: 'none',\n    border: 'none'\n  });\n};\n\nvar baseTodayBox = css({\n  border: '1px solid #f9748a'\n});\n\nvar Day = function Day(_ref) {\n  var day = _ref.day,\n      dateData = _ref.dateData,\n      month = _ref.month,\n      onDateClick = _ref.onDateClick,\n      onDateHover = _ref.onDateHover,\n      dateStyle = _ref.dateStyle,\n      _ref$markToday = _ref.markToday,\n      markToday = _ref$markToday === void 0 ? false : _ref$markToday,\n      styles = _ref.styles,\n      props = _objectWithoutProperties(_ref, [\"day\", \"dateData\", \"month\", \"onDateClick\", \"onDateHover\", \"dateStyle\", \"markToday\", \"styles\"]);\n\n  var isToday = markToday && isSameDay(day, new Date());\n  var isThisMonth = getMonth(day) === month;\n  var dayData = dateData[format(day, 'YYYY-MM-DD')];\n  var events = dayData ? dayData.events : [];\n  var dayStyles = dayData && dayData.styles ? dayData.styles : {};\n  var dateBox = styles.dateBox,\n      dateText = styles.dateText; // const isSelected = multiple\n  //   ? selected.some(item => isEqual(day, item))\n  //   : isEqual(day, selected);\n\n  return React.createElement(\"td\", Object.assign({}, css(baseDateBox, dateBox, dayStyles.dateBox, dateStyle, isToday && baseTodayBox), {\n    onMouseOver: onDateHover,\n    onClick: onDateClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"button\", Object.assign({\n    type: \"button\"\n  }, css(baseDateText(isThisMonth), dateText, dayStyles.dateText), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), getDate(day)), events.map(function (event, i) {\n    return React.createElement(Event, {\n      key: i,\n      styles: styles,\n      event: event,\n      isThisMonth: isThisMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  }));\n};\n\nvar _default = Day;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(baseDateBox, \"baseDateBox\", \"/Users/lth/LTH_2018/recalendar/src/components/Common/Day.js\");\n  reactHotLoader.register(baseDateText, \"baseDateText\", \"/Users/lth/LTH_2018/recalendar/src/components/Common/Day.js\");\n  reactHotLoader.register(baseTodayBox, \"baseTodayBox\", \"/Users/lth/LTH_2018/recalendar/src/components/Common/Day.js\");\n  reactHotLoader.register(Day, \"Day\", \"/Users/lth/LTH_2018/recalendar/src/components/Common/Day.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/lth/LTH_2018/recalendar/src/components/Common/Day.js\");\n  leaveModule(module);\n})();\n\n;\nDay.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Day\",\n  \"props\": {\n    \"markToday\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};",{"version":3,"sources":["/Users/lth/LTH_2018/recalendar/src/components/Common/Day.js"],"names":["React","isSameDay","format","getMonth","getDate","css","Event","baseDateBox","fontSize","position","minWidth","minHeight","textAlign","verticalAlign","cursor","opacity","transition","baseDateText","isThisMonth","marginBottom","color","backgroundColor","outline","border","baseTodayBox","Day","day","dateData","month","onDateClick","onDateHover","dateStyle","markToday","styles","props","isToday","Date","dayData","events","dayStyles","dateBox","dateText","map","event","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport isSameDay from 'date-fns/is_same_day';\nimport format from 'date-fns/format';\nimport getMonth from 'date-fns/get_month';\nimport getDate from 'date-fns/get_date';\nimport { css } from 'glamor';\nimport { Event } from '.';\n\nconst baseDateBox = css({\n  fontSize: 14,\n  position: 'relative',\n  minWidth: '2.5em',\n  minHeight: '2.5em',\n  textAlign: 'center',\n  verticalAlign: 'top',\n  cursor: 'pointer',\n  opacity: 1,\n  transition: 'opacity 0.2s',\n});\nconst baseDateText = isThisMonth => css({\n  marginBottom: '0.3em',\n  cursor: 'pointer',\n  color: isThisMonth ? 'inherit' : '#ccc',\n  backgroundColor: 'transparent',\n  outline: 'none',\n  border: 'none',\n});\nconst baseTodayBox = css({\n  border: '1px solid #f9748a',\n});\nconst Day = ({\n  day,\n  dateData,\n  month,\n  onDateClick,\n  onDateHover,\n  dateStyle, // from pick or range date\n  markToday = false,\n  styles,\n  ...props\n}) => {\n  const isToday = markToday && isSameDay(day, new Date());\n  const isThisMonth = getMonth(day) === month;\n  const dayData = dateData[format(day, 'YYYY-MM-DD')];\n  const events = dayData ? dayData.events : [];\n  const dayStyles = dayData && dayData.styles ? dayData.styles : {};\n  const { dateBox, dateText } = styles;\n  // const isSelected = multiple\n  //   ? selected.some(item => isEqual(day, item))\n  //   : isEqual(day, selected);\n  return (\n    <td\n      {...css(\n        baseDateBox,\n        dateBox,\n        dayStyles.dateBox,\n        dateStyle,\n        isToday && baseTodayBox,\n      )}\n      onMouseOver={onDateHover}\n      onClick={onDateClick}\n    >\n      <button\n        type=\"button\"\n        {...css(baseDateText(isThisMonth), dateText, dayStyles.dateText)}\n      >\n        {getDate(day)}\n      </button>\n      {events.map((event, i) => (\n        <Event\n          key={i}\n          styles={styles}\n          event={event}\n          isThisMonth={isThisMonth}\n        />\n      ))}\n    </td>\n  );\n};\n\nexport default Day;\n"]}]}